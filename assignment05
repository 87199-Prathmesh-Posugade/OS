#!/bin/bash
echo -n "whoami: "
whoami
echo -n "current working directory: "
pwd

#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a shell script to display menu like “1. Date, 2. Cal, 3. Ls, 4. Pwd, 5. Exit” and
# execute the commands depending on user choice.
#----------------------------------------------------------------------------------------------

select ch in Date Cal Ls Pwd Exit
do
	case $ch in
		Date)
			date
			;;
		Cal)
			cal
			;;
		Ls)
			ls
			;;
		Pwd)
			pwd
			;;

	        Exit)
     			break
   			;;
		*)
			echo "Be Valid...!"
			;;			
	esac
done

#!/bin/bash
#----------------------------------------------------------------------------------------------
#Write a shell script to accept the name from the user and check whether user entered
#name is file or directory. If name is file display its size and if it is directory display its
#contents.
#----------------------------------------------------------------------------------------------
echo -n "Enter path for file or directory: "
read name
if [ -e $name ]
then
	if [ -f $name ]
	then
		stat $name
	else
		ls $name/
	fi
else
	echo "path doesn't exists...!"
fi

#!/bin/bash
#----------------------------------------------------------------------------------------------
#Write a shell script to determine whether a given number is prime or not
#----------------------------------------------------------------------------------------------

echo -n "Enter no to check for prime: "
read n

i=2

if [ $n -eq 1 ]
then
	n=2
fi

until [ $n -eq $i ]
do
	if [ `expr $n % $i` -eq 0 ]
	then
		echo "not in prime"
		break;
	fi
	i=`expr $i + 1`
done

if [ $n -eq $i ]
then
	echo "prime"
fi

#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a Program to find the greatest of three numbers
#----------------------------------------------------------------------------------------------

echo -n "Enter three numbers: "
read a b c
if [ $a -gt $b ] && [ $a -gt $c ];
then
	echo "First number is greater :)"
elif [ $b -gt $c ]
then
	echo "Second number is greater :)"
else
	echo "Third number is greater :)"
fi


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a Program to find whether a given year is a leap year or not
#----------------------------------------------------------------------------------------------

echo -n "Enter year: "
read n

if [ `expr $n % 4` -eq 0 ]
then
	if [ `expr $n % 400` -eq 0 ]
	then
		echo "LEAP :)"
	elif [ `expr $n % 100` -ne 0 ]
	then
		echo "LEAP :)"
	else
		echo "NOT LEAP :("
	fi
else
	echo "NOT LEAP :("
fi


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a Program to find whether a given number is positive or negative
#----------------------------------------------------------------------------------------------

echo -n "Enter Number: "
read n
if [ $n -lt 0 ]
then
	echo "Negative"
elif [ $n -gt 0 ]
then
	echo "Positive"
else
	echo "Zero"
fi


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a program to print the table of a given number.
#----------------------------------------------------------------------------------------------

echo -n "Enter Number for Table: "
read n
i=1
while [ $i -ne 10 ]
do
        res=`expr $i \* $n`
	echo "$i x $n = $res"
	i=`expr $i + 1`
done


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a program to find the factorial of given number.
#----------------------------------------------------------------------------------------------

echo -n "Enter number factorial: "
read n
a=1
until [ $n -eq 1 ]
do
	a=`expr $a \* $n`
	n=`expr $n - 1`
done
echo "FACTORIAL: $a"


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a program to find given number of terms in the Fibonacci series.
#----------------------------------------------------------------------------------------------

echo -n "Enter Fibo Number: "
read n

x=0
y=1
f=0

for((i=0;i<n;i++))
do
	echo -n "$f "
	f=$((x+y))
	x=$y
	y=$f	
done
echo 


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a program to calculate gross salary if the DA is 40%, HRA is 20% of basic salary.
# Accept basic salary form user and display gross salary (Result can be floating point
# value).
#----------------------------------------------------------------------------------------------

echo -n "Enter Salary: "
read n
n=`echo "$n + $n * .4 + $n * .2" | bc`
echo "Salary: $n"


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a shell script to accept a filename as argument and displays the last modification
# time if the file exists and a suitable message if it doesn’t exist.
#----------------------------------------------------------------------------------------------

echo -n "Enter filename: "
read n

if [ -e $n ]
then
	o=$(stat "$n" | head -6 | tail -1)
	echo "$o :)"
else
	echo "file not exists ):"
fi


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a shell script to display only hidden file of current directory.
#----------------------------------------------------------------------------------------------

ls -a | grep "^\."


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Write a shell script to display only executable files of current directory.
#----------------------------------------------------------------------------------------------

a=$(ls -l | grep "^-........x")
b=$(ls -l | grep "^-.....x...")
c=$(ls -l | grep "^-..x......")

if [ "$a" ]; then
	echo "$a"
elif [ "$b" ]; then
	echo "$b"
elif [ "$c" ]; then
	echo "$c"
else
	echo "no any executable file"
fi


#!/bin/bash
#----------------------------------------------------------------------------------------------
# Accept the two file names from user and append the contents in reverse case of first file
# into second file.
#----------------------------------------------------------------------------------------------

echo -n "Enter two file name: "
read a b
if [ -f $a ] && [ -f $b ]
then
	rev $a | cat >> $b
	cat $b
else
	echo "they should be files"
fi
